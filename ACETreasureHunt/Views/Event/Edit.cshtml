
    <link href="@Url.Content("~/Content/threedetails.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/home.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/form.css")" rel="stylesheet" type="text/css" />

@model ACETreasureHunt.Models.Event

@{
    ViewBag.Title = "Create";
}

<div class="container abc">
    <h2 class="white">Edit</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-xs-12 col-md-12 col-lg-6">
                <div class="form-horizontal">
                    <h4 class="white">Event</h4>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    <div class="row">
                        <div style="margin-left:30px;margin-right:30px;">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h3 class="panel-title">Event Details<small>..!</small></h3>
                                </div>
                                <div class="panel-body">
                                    <form role="form">
                                        <div class="form-group">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Event Name" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Start Date" } })
                                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.EditorFor(model => model.StartLatitude, new { htmlAttributes = new { @class = "form-control", placeholder = "Start Latitude" } })
                                            @Html.ValidationMessageFor(model => model.StartLatitude, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.EditorFor(model => model.StartLongitude, new { htmlAttributes = new { @class = "form-control", placeholder = "Start Longitude" } })
                                            @Html.ValidationMessageFor(model => model.StartLongitude, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>

                                        <input type="submit" value="Save" class="btn btn-info btn-block" style="max-width: 100%;"/>

                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xs-12 col-md-12 col-lg-6">
                <h4 class="white">Location</h4>
                <div id="map" data-mode="" style=" height: 300px; width: 100%;overflow:auto;">
                    <input type="hidden" data-map-markers="" value="" name="map-geojson-data" />
                </div>
                <div style="text-align: -webkit-center;">
                    <input id="btnGetLocation" class="btn btn-primary btn-lg btn3d" type="button" value="Save Location" />
                </div>
            </div>
        </div>







        <div class="jumbotron">
            <div class="pricing-table pricing-three-column row">
                <div class="plan col-sm-4 col-lg-4">
                    <div class="plan-name-bronze">
                        <h3>Teams</h3>
                        <img class="ack" src="http://software.improve1.com/content/itpvt-team3.jpg" alt="myImagetitle" />
                    </div>
                    <ul>
                        @foreach (var team in ViewBag.MyList)
                {
                            <li class="plan-feature">@team.Name</li>
                        }

                        <li class="plan-feature"><a href="#" class="btn btn-primary btn-plan-select" onclick="location.href='@Url.Action("Index", "Team")'"><i class="icon-white icon-ok"></i>Manage</a></li>
                    </ul>
                </div>


                <div style="z-index:55;" class="plan col-sm-4 col-lg-4">
                    <div class="plan-name-silver">
                        <h3>Staffs</h3>
                        <img class="ack" src="http://www.affordablesantafedentist.com/wp-content/uploads/2012/08/118251024.jpg" alt="myImagetitle" />
                    </div>
                    <ul>
                        @foreach (var event2 in ViewBag.MyList2)
                {
                            <li class="plan-feature">@event2.Name</li>
                        }

                        <li class="plan-feature"><a href="#" class="btn btn-primary btn-plan-select" onclick="location.href='@Url.Action("Index", "Staff")'"><i class="icon-white icon-ok"></i>Manage</a></li>
                    </ul>
                </div>
                <div class="plan col-sm-4 col-lg-4">
                    <div class="plan-name-gold">
                        <h3>PitStop</h3>
                        <img class="ack" src="http://www.clipartkid.com/images/643/mail-the-author-at-mom-about-town-dvo-gmail-com-visit-www-PyeKRm-clipart.png" alt="myImagetitle" />
                    </div>
                    <ul>
                        @foreach (var event3 in ViewBag.MyList3)
                {
                            <li class="plan-feature">@event3.PitStopName</li>
                        }
                        <li class="plan-feature"><a href="#" class="btn btn-primary btn-plan-select" onclick="location.href='@Url.Action("Index", "PitStop")'"><i class="icon-white icon-ok"></i>Manage</a></li>
                    </ul>
                </div>
            </div>

        </div>
    }
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {

            var osmUrl = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png',
                osmAttrib = '&copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors',
                osm = L.tileLayer(osmUrl, {
                    maxZoom: 18,
                    attribution: osmAttrib
                });


            var map = L.map('map').setView([1.29866, 103.7783], 13).addLayer(osm);


            map.on('click', onMapClick);


            function onMapClick(e) {

                var geojsonFeature = {
                    "type": "Feature",
                    "properties": {},
                    "geometry": {
                        "type": "Point",
                        "coordinates": [e.latlng.lat, e.latlng.lng]
                    }
                }

                var marker;

                L.geoJson(geojsonFeature, {

                    pointToLayer: function (feature, latlng) {

                        marker = L.marker(e.latlng, {

                            title: "Resource Location",
                            alt: "Resource Location",
                            riseOnHover: true,
                            draggable: true,

                        }).bindPopup("<input type='button' value='Remove this' class='marker-delete-button'/>");

                        marker.on("popupopen", onPopupOpen);

                        return marker;
                    }
                }).addTo(map);
            }

            function onPopupOpen() {

                var tempMarker = this;

                //var tempMarkerGeoJSON = this.toGeoJSON();
                //var lID = tempMarker._leaflet_id; // Getting Leaflet ID of this marker

                $(".marker-delete-button:visible").click(function () {
                    map.removeLayer(tempMarker);
                });
            }

            function getAllMarkers() {

                var allMarkersObjArray = [];
                var allMarkersGeoJsonArray = [];

                $.each(map._layers, function (ml) {
                    //console.log(map._layers)
                    if (map._layers[ml].feature) {

                        allMarkersObjArray.push(this)
                        allMarkersGeoJsonArray.push(JSON.stringify(this.toGeoJSON()))
                    }
                })

                if (allMarkersGeoJsonArray.length == 0) {
                    alert("Please select a PitStop Location on the Map");
                } else if (allMarkersGeoJsonArray.length > 1) {
                    alert("Please select single location for this PitStop");
                } else {
                    //alert(allMarkersGeoJsonArray);
                    //alert(JSON.parse(allMarkersGeoJsonArray).geometry.coordinates);
                    //alert(JSON.parse(allMarkersGeoJsonArray).geometry.coordinates[0]);

                    $('#StartLatitude').val(JSON.parse(allMarkersGeoJsonArray).geometry.coordinates[1].toFixed(4));
                    $('#StartLongitude').val(JSON.parse(allMarkersGeoJsonArray).geometry.coordinates[0].toFixed(4));

                }

                // console.log(allMarkersObjArray);
                //alert("total Markers : " + allMarkersGeoJsonArray.length + "\n\n" + allMarkersGeoJsonArray + "\n\n Also see your console for object view of this array");
            }

            $("#btnGetLocation").on("click", getAllMarkers);
        });

    </script>
}
@*'pk.eyJ1IjoiZ3VydXByYWJhIiwiYSI6ImNqMXZtMnAwYTAwMGEyd3BlZDN6b2UyYXQifQ.TLQvP6CeBZLbEWrtmu7fIw'*@

